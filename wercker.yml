box: combient/java-mvn
build:
  steps:
    # Build Creditscore application
    - script:
        name: Customize application home page
        code: sed "s|@@NAMESPACE@@|${WERCKER_APPLICATION_OWNER_NAME}|g" -i $WERCKER_ROOT/src/main/webapp/WEB-INF/views/CreditScore.jsp
    - script:
        name: Print JSP source
        code: cat $WERCKER_ROOT/src/main/webapp/WEB-INF/views/CreditScore.jsp
    - script:
        name: Customize application context path
        code: sed "s|replaceme|${WERCKER_APPLICATION_OWNER_NAME}|g" -i $WERCKER_ROOT/src/main/webapp/WEB-INF/weblogic.xml
    - script:
        name: Print weblogic.xml source
        code: cat $WERCKER_ROOT/src/main/webapp/WEB-INF/weblogic.xml
    - script:
        name: Maven build for WebLogic deployment
        code: mvn clean package -Pweblogic

deploy-to-weblogic:
  box:
      id: spotify/alpine
      cmd: /bin/sh
  steps:
    # Deploy WAR using WebLogic REST Management interface
    - script:
        name: using curl to deploy through REST management interface
        code: |
              curl -v --user $WLS_ADMIN:$WLS_PASSWORD -H "X-Requested-By:Wercker" -H "Accept:application/json" -H "Content-Type:multipart/form-data" -F "model={name: '${WERCKER_APPLICATION_OWNER_NAME}-webapp', targets: [ 'cluster-1' ]}" -F deployment=@"${WERCKER_ROOT}/target/creditscore-1.0.0.war" http://${WLS_IP}:${WLS_ADMIN_PORT}/management/wls/latest/deployments/application
    - script:
        name: Print application URL
        code: echo http://${WLS_IP}:30305/${WERCKER_APPLICATION_OWNER_NAME}

package-archive:
  box:
      id: spotify/alpine
      cmd: /bin/sh
  steps:
    - script:
        name: Install zip
        code: apk --no-cache add zip
    - script:
        name: Package application
        code: |
              mkdir -p $WERCKER_ROOT/wlsdeploy/applications
              cp $WERCKER_ROOT/target/*.war $WERCKER_ROOT/wlsdeploy/applications/
              zip -r archive.zip wlsdeploy
# $JAVA_HOME/bin/jar cvf $WERCKER_ROOT/archive.zip  -C $WERCKER_ROOT/archive wlsdeploy

build-domain-in-home-image:
  box:
      id: alpine
      docker: true
      cmd: /bin/sh
  steps:
    - script:
        name: Install curl
        code: apk --no-cache add curl
    - script:
        name: Download WLDT
        code: |
              curl -Lo $WERCKER_ROOT/weblogic-deploy.zip https://github.com/oracle/weblogic-deploy-tooling/releases/download/weblogic-deploy-tooling-0.14/weblogic-deploy.zip
              ls -la $WERCKER_ROOT
    - script:
        name: Create WebLogic credentials
        code: |
              echo "$WLS_ADMIN" > $WERCKER_ROOT/docker/adminuser.properties
              echo "$WLS_PASSWORD" > $WERCKER_ROOT/docker/adminpass.properties
              ls -la $WERCKER_ROOT/docker/
              cat $WERCKER_ROOT/docker/adminuser.properties
    - script:
        name: Build docker image
        code: ./build.docker.sh
